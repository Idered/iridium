diff --git a/node_modules/@vercel/client/dist/utils/fetch.js b/node_modules/@vercel/client/dist/utils/fetch.js
index 3e0f502..013a874 100644
--- a/node_modules/@vercel/client/dist/utils/fetch.js
+++ b/node_modules/@vercel/client/dist/utils/fetch.js
@@ -1,11 +1,30 @@
 "use strict";
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+}) : (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    o[k2] = m[k];
+}));
+var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
+    Object.defineProperty(o, "default", { enumerable: true, value: v });
+}) : function(o, v) {
+    o["default"] = v;
+});
+var __importStar = (this && this.__importStar) || function (mod) {
+    if (mod && mod.__esModule) return mod;
+    var result = {};
+    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
+    __setModuleDefault(result, mod);
+    return result;
+};
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.nodeFetch = exports.zeitFetch = void 0;
-const node_fetch_1 = __importDefault(require("node-fetch"));
-exports.nodeFetch = node_fetch_1.default;
+const nodeFetch = __importStar(require("node-fetch"));
+exports.nodeFetch = nodeFetch;
 const fetch_1 = __importDefault(require("@zeit/fetch"));
-const zeitFetch = fetch_1.default(node_fetch_1.default);
+const zeitFetch = (0, fetch_1.default)(nodeFetch);
 exports.zeitFetch = zeitFetch;
diff --git a/node_modules/@vercel/client/dist/utils/index.js b/node_modules/@vercel/client/dist/utils/index.js
index d1b2cef..073487b 100644
--- a/node_modules/@vercel/client/dist/utils/index.js
+++ b/node_modules/@vercel/client/dist/utils/index.js
@@ -34,6 +34,7 @@ const EVENTS_ARRAY = [
 ];
 exports.EVENTS = new Set(EVENTS_ARRAY);
 function getApiDeploymentsUrl(metadata) {
+  return '/v9/now/deployments';
     if (metadata && metadata.builds && !metadata.functions) {
         return '/v10/now/deployments';
     }
@@ -175,7 +176,7 @@ const fetch = async (url, token, opts = {}, debugEnabled, useNodeFetch) => {
     debug(`${opts.method || 'GET'} ${url}`);
     time = Date.now();
     const res = useNodeFetch
-        ? await fetch_1.nodeFetch(url, opts)
+        ? await fetch_1.nodeFetch.default(url, opts)
         : await fetch_1.zeitFetch(url, opts);
     debug(`DONE in ${Date.now() - time}ms: ${opts.method || 'GET'} ${url}`);
     semaphore.release();
